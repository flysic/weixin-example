<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

<!--
	如果在springmvc配置文件，不使用com.ironside.weixin.controller前缀，而是使用com.ironside.weixin，
	则service、dao层的bean可能也重新加载了，但事务的AOP代理没有配置在springmvc配置文件中，
	从而造成新加载的bean覆盖了老的bean，造成事务失效。只要使用use-default-filters=“false”
	禁用掉默认的行为就可以了。
 -->
<context:component-scan base-package="com.ironside.weixin" use-default-filters="false">
	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
</context:component-scan>

<!--
	<mvc:annotation-driven /> 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。
	<mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
	是spring MVC为@Controllers分发请求所必须的。 
 -->
<mvc:annotation-driven />

<!--
	如果将DispatcherServlet请求映射配置为"/"，则Spring MVC将捕获Web容器所有的请求，包括静态资源的请求，
	Spring MVC会将它们当成一个普通请求处理，因此找不到对应处理器将导致错误。配置<mvc:resources />后，
	由Spring MVC框架自己处理静态资源，并添加一些有用的附加值功能。cache-period 为缓存时间 一半设为1年31536000，
	开发时建议设小点(10)以防止缓存带来的麻烦
 -->
<mvc:resources location="/resources/" mapping="/resources/**" cache-period="10"/>

<!--
	解析可由Servlet API的RequestDispatcher转发的视图资源图，如：内部jsp或者servlet 
 -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 决定视图类型，如果添加了jstl支持（即有jstl.jar），那么默认就是解析为jstl视图 -->
	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	<!-- 视图前缀 -->
	<property name="prefix" value="/WEB-INF/jsp/" />
	<!-- 视图后缀 -->
	<property name="suffix" value=".jsp"></property>
</bean>

<!--  
<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">    
	<property name="messageConverters">    
    	<util:list>    
        	<bean class="org.springframework.http.converter.StringHttpMessageConverter">    
            	<property name="supportedMediaTypes">    
            		<util:list>  
						<value>text/html;charset=UTF-8</value>  
					</util:list>    
				</property>    
			</bean>    
		</util:list>    
	</property>    
</bean>  
-->

</beans>
